version: '3.8'
services:
  flask:
    build:
      context: app
      dockerfile: Dockerfile
    container_name: server-stack
    restart: unless-stopped
    volumes:
      - ./app:/var/www
    environment:
      APP_ENV: "development"
      APP_DEBUG: "True"
      APP_PORT: 5000        
      PYTHONUNBUFFERED: 1
      MONGODB_DATABASE: flaskdb
      MONGODB_USERNAME: mrflexi_root
      MONGODB_PASSWORD: nc:13Arequipa
      MONGODB_HOSTNAME: mongodb
    #networks:
    #  - backend
    ports:
      - 41851:5000
      - 41860:8000
    
  redis:
    image: redis:6.2-alpine
    container_name: redisdb
    restart: unless-stopped
    #networks:
    #  - backend
    volumes:
      - ./data/redis:/data

  mongodb:
    image: mongo:4.4.18
    container_name: mongodb
    restart: unless-stopped
    #command: mongod --auth
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
      MONGODB_DATA_DIR: /data/db
      MONDODB_LOG_DIR: /dev/null
    volumes:
     - ./data/mongodb:/data/db     
    #networks:
    #  - backend
    ports:
      - :27017

  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    restart: unless-stopped
    environment:
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin
      ME_CONFIG_MONGODB_URL: mongodb://admin:admin@mongodb:27017/
    ports:
      - "41852:8081"
    depends_on:
      - mongodb
    
  postgres:
    container_name: postgres
    image: postgres
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      PGDATA: /data/postgres
    volumes:
       - ./data/postgres:/data/postgres
    ports:
      - :5432
    restart: unless-stopped
  
  pgadmin:
    user: root
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: szaroletta@hotmail.com
      PGADMIN_DEFAULT_PASSWORD: admin
    volumes:
      - ./data/pgadmin:/var/lib/pgadmin
    ports:
      - 41854:80
    restart: unless-stopped
    depends_on:
      - postgres

  pgweb:
    container_name: pgweb 
    restart: unless-stopped
    image: sosedoff/pgweb
    ports: 
      - 41856:8081
    environment:
      - DATABASE_URL=postgres://admin:admin@postgres:5432/TrainControl?sslmode=disable
    depends_on:
      - postgres


networks:
    default:
      external: true       
      name: flask_server_backend